{"componentChunkName":"component---src-templates-blog-template-js","path":"/b-no-offset/","result":{"data":{"cur":{"id":"7cc5bbb5-ab67-51e9-a608-7642b9b862ae","html":"<h2 id=\"offset-방식의-페이지-처리-문제점\" style=\"position:relative;\"><a href=\"#offset-%EB%B0%A9%EC%8B%9D%EC%9D%98-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B2%98%EB%A6%AC-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"offset 방식의 페이지 처리 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OFFSET 방식의 페이지 처리 문제점</h2>\n<ul>\n<li>\n<p>일반적인 페이지네이션 방식은 아래와 같다.</p>\n<ol>\n<li><code class=\"language-text\">LIMIT</code> 와 <code class=\"language-text\">OFFSET</code> 명령어를 이용하면 <code class=\"language-text\">OFFSET</code>(어디부터) LIMIT(몇개의) 데이터를 불러올지 결정한다.</li>\n<li>이를 이용해 <code class=\"language-text\">OFFSET</code>을 페이지 번호로 활용한다. (offset = page size * page number)</li>\n</ol>\n</li>\n<li>\n<p>OFFSET의 경우 앞에서 읽었던 행을 다시 읽기 때문에, 페이지 번호가 뒤로 갈수록 더욱 느려진다는 문제점이 있다.</p>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/451cea3e-adbd-474b-9f00-9adcb337a5c3\" alt=\"image\"></p>\n<p><a href=\"https://jojoldu.tistory.com/528\">https://jojoldu.tistory.com/528</a></p>\n<ul>\n<li>만약 OFFSET이 1000이고, LIMIT이 10일 경우, 1,000부터 10개를 읽어야 하기 때문에 1,010개의 데이터를 읽는다.</li>\n<li>즉, 뒤로 갈수록 버려야하지만 읽어야 할 데이터가 많기 때문에 느려지는 것이다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"no-offset-페이지네이션\" style=\"position:relative;\"><a href=\"#no-offset-%ED%8E%98%EC%9D%B4%EC%A7%80%EB%84%A4%EC%9D%B4%EC%85%98\" aria-label=\"no offset 페이지네이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No OFFSET 페이지네이션</h2>\n<ul>\n<li>위 쿼리처럼 <code class=\"language-text\">OFFSET</code>을 사용하지 않고 페이지네이션을 수행한다는 의미이다.</li>\n<li>조회 시작 부분을 인덱스로 빠르게 찾아 첫 페이지만 읽도록 하는 방식이다.</li>\n</ul>\n<h2 id=\"no-offset으로-무한-스크롤-구현하기\" style=\"position:relative;\"><a href=\"#no-offset%EC%9C%BC%EB%A1%9C-%EB%AC%B4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"no offset으로 무한 스크롤 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No OFFSET으로 무한 스크롤 구현하기</h2>\n<h3 id=\"구현-시-고려했던-상황\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84-%EC%8B%9C-%EA%B3%A0%EB%A0%A4%ED%96%88%EB%8D%98-%EC%83%81%ED%99%A9\" aria-label=\"구현 시 고려했던 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현 시 고려했던 상황</h3>\n<ul>\n<li>id가 클수록 최신순이다. (Auto Increment)</li>\n<li>id는 PK로 이미 인덱스가 걸려있기 때문에 다음과 같은 편리함이 있었다.\n<ul>\n<li><code class=\"language-text\">ASC</code>의 경우 <code class=\"language-text\">ORDER BY</code>를 할 필요가 없다. (하지만 이 부분은 추가 수정 시 필요가 없었다..^_^)</li>\n<li>별도로 createdAt으로 인덱스를 걸 필요가 없었다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1차-코드\" style=\"position:relative;\"><a href=\"#1%EC%B0%A8-%EC%BD%94%EB%93%9C\" aria-label=\"1차 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1차 코드</h3>\n<ol>\n<li>\n<p>마지막 아이템의 PK값을 컨트롤러에서 파라미터로 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@GetMapping</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAllQnA</span><span class=\"token punctuation\">(</span>\n    <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"sortOption\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ValidateSortOption</span><span class=\"token punctuation\">(</span>enumClass <span class=\"token operator\">=</span> <span class=\"token class-name\">SortOption</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">SortOption</span> sortOption<span class=\"token punctuation\">,</span>\n    <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"lastIndex\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> lastIndex\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> qnaService<span class=\"token punctuation\">.</span><span class=\"token function\">getAllQnASort</span><span class=\"token punctuation\">(</span>sortOption<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lastIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Service 코드를 아래와 같이 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAllQnA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> sortOption<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// TODO: 추후 24시 기준으로 업데이트</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sortOption<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"views\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnASortByViews</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastIndex <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LastIndexNotFoundException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnASortByLatest</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>[추가] 댓글 무한 스크롤을 구현하던 중 <strong>처음 요청을 보낼 땐 가장 최근의 게시글 id를 찾아주는 것이 좋을 것</strong> 같아 아래와 같이 수정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Service</span>\n<span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAllQnA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> sortOption<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// TODO: 추후 24시 기준으로 업데이트</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sortOption<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"views\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnASortByViews</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastIndex <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Long</span> maxId <span class=\"token operator\">=</span> qnaRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findMaxId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnASortByLatest</span><span class=\"token punctuation\">(</span>maxId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnASortByLatest</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Repository</span>\n<span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span>\n    value <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT MAX(id) \"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"FROM QnA\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findMaxId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>QueryDsl을 아래와 같이 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 최신순 무한 스크롤\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAllQnASortByLatest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> jpaQueryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>likes<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>views<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>createdAt\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">gt</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>마지막으로 받아온 lastIndex보다 큰 값을 10개까지만 가져온다.</li>\n<li>요청 시 1, 10, 20, 30 으로 lastIndex를 맞추면 될 것이라 생각했다.</li>\n</ul>\n</li>\n</ol>\n<p>위 코드의 결과는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/qna?sortOption=latest&amp;lastIndex=<span class=\"token number\">150</span>\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">151</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T20:57:01\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T21:01:57\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-24T10:58:35\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n...\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>id순으로 정렬되어 응답이 이루어지긴 했지만 최신순으로 응답이 온 것은 아니었다.</li>\n</ul>\n<h3 id=\"2차-수정\" style=\"position:relative;\"><a href=\"#2%EC%B0%A8-%EC%88%98%EC%A0%95\" aria-label=\"2차 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2차 수정</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 최신순 무한 스크롤\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAllQnASortByLatest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> jpaQueryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>likes<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>views<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>createdAt\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">gt</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">desc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">orderBy(id.desc())</code>를 추가로 걸어두어 가장 큰 아이디(최신 insert된 게시물) 순서로 정렬되어 10개씩 가져오도록 했다.</li>\n</ul>\n<p>위 코드의 결과는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/qna?sortOption=latest&amp;lastIndex=<span class=\"token number\">150</span>\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">184</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JDK 17과 Spring Boot\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-10T02:04:26\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JDK 17과 Spring Boot\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-09T22:29:01\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ㅎㅇㅁㄴㅇㅎ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-09T22:16:26\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n...\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li><strong>lastIndex가 어떤 값이든 항상 같은 값을 반환하는 문제가 발생한다.</strong></li>\n<li>lastIndex보다 큰 값이면 상관없었기 때문에 <code class=\"language-text\">ORDER BY DESC</code>로 인해 가장 큰 ID부터 불러왔기 때문이다.</li>\n</ul>\n<h3 id=\"3차-수정\" style=\"position:relative;\"><a href=\"#3%EC%B0%A8-%EC%88%98%EC%A0%95\" aria-label=\"3차 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3차 수정</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 최신순 무한 스크롤\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAllQnASortByLatest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> jpaQueryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">GetAllQnAResponse</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>likes<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>views<span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                qQnA<span class=\"token punctuation\">.</span>createdAt\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">loe</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span>qQnA<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">desc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>lastIndex를 10, 20, 30, … 으로 받아오도록 설정했다.</li>\n<li><code class=\"language-text\">ORDER BY DESC</code>로 정렬한 후, lastIndex보다 작거나 같은 index 값을 가진 게시물을 10개까지만 가져온다.</li>\n</ul>\n<p>위 코드의 결과는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/qna?sortOption=latest&amp;lastIndex=<span class=\"token number\">150</span>\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T20:55:59\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">149</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T20:51:59\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T20:51:53\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">147</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T20:49:36\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T20:48:32\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">145</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-23T12:17:36\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">142</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-21T21:32:29\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">141</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Java 17 버전에서 QueryDsl 설정 방법\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-20T20:38:57\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"고구마 피자와 감자 피자\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-19T20:44:54\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">139</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"고구마 피자와 감자 피자\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"views\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"commentCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-19T20:11:48\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>최신순으로 잘 정렬된 것을 볼 수 있다.</p>\n<h2 id=\"추가-댓글-무한-스크롤-구현하기\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EB%8C%93%EA%B8%80-%EB%AC%B4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"추가 댓글 무한 스크롤 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[추가] 댓글 무한 스크롤 구현하기</h2>\n<h3 id=\"고려-사항\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD\" aria-label=\"고려 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고려 사항</h3>\n<ol>\n<li>Q&#x26;A를 넘겨줄 때 가장 큰 commentId를 기준으로 댓글 10개를 불러온다.</li>\n<li>이후 스크롤 시 가장 작은 id를 기준으로 재요청하도록 한다.</li>\n</ol>\n<h3 id=\"1차-구현\" style=\"position:relative;\"><a href=\"#1%EC%B0%A8-%EA%B5%AC%ED%98%84\" aria-label=\"1차 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1차 구현</h3>\n<ol>\n<li>\n<p>처음 요청을 보낼 땐 해당 게시글 댓글의 최대 id값을 알 수 없기 때문에 lastIndex를 보내지 않는다.</p>\n</li>\n<li>\n<p>위와 같이 처리했을 때 lastIndex가 없는 경우 자동으로 가장 큰 아이디 값을 찾아주도록 코드를 작성했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllCommentByQnAId</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAllQnACommentByQnAId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> qnaId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">QnA</span> qna <span class=\"token operator\">=</span> <span class=\"token function\">getQnA</span><span class=\"token punctuation\">(</span>qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastIndex <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token comment\">// TODO: 해당 게시글에 댓글이 없는 경우 확인</span>\n\t    <span class=\"token class-name\">Long</span> lastIndexByQnAId <span class=\"token operator\">=</span> qnaCommentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findMaxIdByQnAId</span><span class=\"token punctuation\">(</span>qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnAComment</span><span class=\"token punctuation\">(</span>lastIndexByQnAId<span class=\"token punctuation\">,</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// TODO: 탈퇴된 멤버 처리 확인</span>\n\t<span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnAComment</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">,</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<p>결과는 아래와 같다.</p>\n<ol>\n<li>\n<p>댓글이 있는 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/qna/<span class=\"token number\">162</span>/comments\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임304\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://abc.abc\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:18\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">179</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임304\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://abc.abc\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:17\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">178</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임304\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://abc.abc\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:16\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n...\n<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/qna/<span class=\"token number\">162</span>/comments?lastIndex=<span class=\"token number\">171</span>\n\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">171</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임304\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://abc.abc\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:08\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">143</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임304\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://abc.abc\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"감사합니다\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-08T23:57:59\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ol>\n<p>그러나…<strong>댓글이 없는 게시글인 경우에는 500 에러가 발생한다…!</strong></p>\n<h3 id=\"2차-수정-1\" style=\"position:relative;\"><a href=\"#2%EC%B0%A8-%EC%88%98%EC%A0%95-1\" aria-label=\"2차 수정 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2차 수정</h3>\n<ul>\n<li>\n<p>500오류의 원인은 단순 NPE 문제였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">ERROR <span class=\"token number\">2024</span><span class=\"token number\">-02</span><span class=\"token number\">-11</span> <span class=\"token number\">23</span><span class=\"token operator\">:</span><span class=\"token number\">43</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">[</span>http-nio<span class=\"token number\">-8080</span>-exec<span class=\"token number\">-5</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>dispatcherServlet<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token number\">175</span><span class=\"token punctuation\">]</span> - Servlet.service() for servlet <span class=\"token punctuation\">[</span>dispatcherServlet<span class=\"token punctuation\">]</span> in context with path <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> threw exception <span class=\"token punctuation\">[</span>Request processing failed; nested exception is java.lang.NullPointerException<span class=\"token punctuation\">]</span> with root cause\njava.lang.NullPointerException<span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span></code></pre></div>\n<ul>\n<li>comment가 없는 경우 maxId의 결과값이 null이기 때문에 발생한 문제인 듯 했다.</li>\n</ul>\n</li>\n<li>\n<p>아래와 같이 코드를 수정하면 댓글이 없는 경우 빈 배열을 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Service 로직</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllCommentByQnAId</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAllQnACommentByQnAId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> qnaId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">QnA</span> qna <span class=\"token operator\">=</span> <span class=\"token function\">getQnA</span><span class=\"token punctuation\">(</span>qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastIndex <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\">// fix: 결과가 null인 경우 0L</span>\n        <span class=\"token class-name\">Long</span> lastIndexByQnAId <span class=\"token operator\">=</span> qnaCommentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findMaxIdByQnAId</span><span class=\"token punctuation\">(</span>qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnAComment</span><span class=\"token punctuation\">(</span>lastIndexByQnAId<span class=\"token punctuation\">,</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// TODO: 탈퇴된 멤버 처리 확인</span>\n    <span class=\"token keyword\">return</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnAComment</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">,</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Repository</span>\n<span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span>\n    value <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT MAX(id) \"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"FROM QnAComment \"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"WHERE qna.id = :qnaId\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findMaxIdByQnAId</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"qnaId\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>위 쿼리는 가장 최근에 작성된 댓글 아이디를 찾아준다.</li>\n</ul>\n</li>\n</ul>\n<p>실행 결과는 아래와 같다. (댓글이 없는 게시물인 경우)</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">GET /api/qna/<span class=\"token number\">150</span>/comments\n\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"3차-수정-1\" style=\"position:relative;\"><a href=\"#3%EC%B0%A8-%EC%88%98%EC%A0%95-1\" aria-label=\"3차 수정 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3차 수정</h3>\n<p>추가적으로 탈퇴한 회원이 작성한 댓글 정보를 받아오지 못하는 것 같아 아래와 같이 수정하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Service 로직</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllCommentByQnAId</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAllQnACommentByQnAId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> lastIndex<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> qnaId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">QnA</span> qna <span class=\"token operator\">=</span> <span class=\"token function\">getQnA</span><span class=\"token punctuation\">(</span>qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastIndex <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Long</span> lastIndexByQnAId <span class=\"token operator\">=</span> qnaCommentRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findMaxIdByQnAId</span><span class=\"token punctuation\">(</span>qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">QnAComment</span><span class=\"token punctuation\">></span></span> comments <span class=\"token operator\">=</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnAComment</span><span class=\"token punctuation\">(</span>lastIndexByQnAId<span class=\"token punctuation\">,</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> qnaCommentMapper<span class=\"token punctuation\">.</span><span class=\"token function\">toQnAComments</span><span class=\"token punctuation\">(</span>comments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">QnAComment</span><span class=\"token punctuation\">></span></span> comments <span class=\"token operator\">=</span> qnaQuerydslRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAllQnAComment</span><span class=\"token punctuation\">(</span>lastIndex<span class=\"token punctuation\">,</span> qnaId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> qnaCommentMapper<span class=\"token punctuation\">.</span><span class=\"token function\">toQnAComments</span><span class=\"token punctuation\">(</span>comments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Mapper 로직</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllCommentByQnAId</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">toQnAComments</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">QnAComment</span><span class=\"token punctuation\">></span></span> comments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GetAllCommentByQnAId</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">QnAComment</span> comment <span class=\"token operator\">:</span> comments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">GetAllCommentByQnAId</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">member</span><span class=\"token punctuation\">(</span><span class=\"token function\">toMember</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">getMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">content</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">likes</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">getLikes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">dislikes</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">getDislikes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">createdAt</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">getCreatedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>결과:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// 탈퇴한 사용자 댓글 응답</span>\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default_user.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:18\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">179</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default_user.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:17\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">178</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default_user.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:16\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">177</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default_user.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"탈퇴한 사용자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-02-11T22:00:15\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n...\n<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">탈퇴하지 않은 사용자 댓글 응답\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">135</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임10\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"반갑습니다.\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-19T03:23:09\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"member\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">146</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"nickname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"닉네임10\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"profileImageUrl\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"introduction\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장하는 개발자입니다.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"성장합니다......\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dislikes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-19T03:08:17\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"참고-자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 자료</h2>\n<ul>\n<li><a href=\"https://thalals.tistory.com/350\">https://thalals.tistory.com/350</a></li>\n<li><a href=\"https://jojoldu.tistory.com/528\">https://jojoldu.tistory.com/528</a></li>\n</ul>","excerpt":"OFFSET 방식의 페이지 처리 문제점 일반적인 페이지네이션 방식은 아래와 같다.  와  명령어를 이용하면 (어디부터) LIMIT(몇개의) 데이터를 불러올지 결정한다. 이를 이용해 을 페이지 번호로 활용한다. (offset = page size * page number) OFFSET의 경우 앞에서 읽었던 행을 다시 읽기 때문에, 페이지 번호가 뒤로 갈수록 더욱 느려진다는 문제점이 있다. image https://jojoldu.tistory.com/528 만약 OFFSET이 1000이고, LIMIT이 10일 경우, 1,000부터 10개를 읽어야 하기 때문에 1,010개의 데이터를 읽는다. 즉, 뒤로 갈수록 버려야하지만 읽어야 할 데이터가 많기 때문에 느려지는 것이다. No OFFSET 페이지네이션 위 쿼리처럼 을 사용하지 않고 페이지네이션을 수행한다는 의미이다. 조회 시작 부분을 인덱스로 빠르게 찾아 첫 페이지만 읽도록 하는 방식이다. No OFFSET으로 무한 스크롤 구현하기 구현…","frontmatter":{"date":"February 11, 2024","title":"무한 스크롤 기능 구현하기 (with No Offset)","categories":"Backend","author":"유희진","emoji":"☁️"},"fields":{"slug":"/b-no-offset/"}},"next":{"id":"d9db3a51-3bdb-5da9-92de-7f428973bf16","html":"<h2 id=\"기존-코드\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4-%EC%BD%94%EB%93%9C\" aria-label=\"기존 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존 코드</h2>\n<p>기존 코드의 경우 Handler에 너무 많은 책임이 있었고, 통일되지 않아 지저분한 느낌이 들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExceptionHandler</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestControllerAdvice</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestControllerAdvice</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileExceptionHandler</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleIoException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalServerError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span>member<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseErrorResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataIntegrityViolationException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>access<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AccessDeniedException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExceptionHandler</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestControllerAdvice</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>persistence<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EntityNotFoundException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NoSuchElementException</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestControllerAdvice</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GlobalExceptionHandler</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchElementException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchElementException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">badRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PasswordNotMatchException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PasswordNotMatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password does not match.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNAUTHORIZED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SkillsNotValidException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SkillsNotValidException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"skills not valid.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BAD_REQUEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WeakPasswordException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WeakPasswordException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"weak password.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BAD_REQUEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DuplEmailException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DuplEmailException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email already exists.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CONFLICT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DuplNicknameException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DuplNicknameException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nickname already exists.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CONFLICT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberNotFoundException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"member not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NOT_FOUND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityNotFoundException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleEntityNotFoundException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"해당 엔티티를 찾을 수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NOT_FOUND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataIntegrityViolationException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleDataIntegrityViolation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataIntegrityViolationException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이미 존재하는 데이터입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CONFLICT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccessDeniedException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleAccessDeniedException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccessDeniedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FORBIDDEN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccessTokenInvalidException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleAccessDeniedException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccessTokenInvalidException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNAUTHORIZED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseErrorResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FieldError</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MethodArgumentNotValidException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExceptionHandler</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestControllerAdvice</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestControllerAdvice</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ValidationExceptionHandler</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodArgumentNotValidException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleValidationExceptions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodArgumentNotValidException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> errors <span class=\"token operator\">=</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">getBindingResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">getFieldErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FieldError</span><span class=\"token operator\">::</span><span class=\"token function\">getDefaultMessage</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> errorMessage <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">BaseErrorResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span>errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BAD_REQUEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<aside>\n❓ 위 방식의 단점?\n</aside>\n<ul>\n<li>위 코드만 봐도 알 수 있듯이 <strong>크기가 클수록 코드의 양이 길어지고 통일성이 사라진다.</strong></li>\n<li><strong>모든 예외를 전부 처리</strong>해야하기 때문에 코드의 양이 길어지며, 확장성 역시 떨어진다.</li>\n</ul>\n<h2 id=\"코드-리팩토링\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\" aria-label=\"코드 리팩토링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 리팩토링</h2>\n<p>모든 <code class=\"language-text\">RuntimeException</code>을 처리하는 <code class=\"language-text\">BaseException</code>을 하나 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span>common</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Getter</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RuntimeException</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">int</span> code<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseException</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> code<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>해당 <code class=\"language-text\">BaseException</code>을 처리하는 <code class=\"language-text\">GlobalExceptionHandler</code>를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseErrorResponse</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FieldError</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MethodArgumentNotValidException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExceptionHandler</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestControllerAdvice</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestControllerAdvice</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GlobalExceptionHandler</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/**\n     * developer custom exception\n     */</span>\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleBaseException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseException</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>exception<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span>exception<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * request valid exception\n     */</span>\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodArgumentNotValidException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleRequestValidException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodArgumentNotValidException</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> errors <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span><span class=\"token function\">getBindingResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">getFieldErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FieldError</span><span class=\"token operator\">::</span><span class=\"token function\">getDefaultMessage</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> errorMessage <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BAD_REQUEST</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span>errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * enum validate exception\n     */</span>\n    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleIllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IllegalArgumentException</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BAD_REQUEST</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BaseErrorResponse</span><span class=\"token punctuation\">(</span>exception<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>위 코드를 통해 필요한 에러만 핸들링하도록 수정함으로써 재사용성을 높였다.</li>\n</ul>\n<p>모든 예외처리 클래스가 <code class=\"language-text\">BaseException</code>을 상속받도록 하면, 어디서든 <code class=\"language-text\">statusCode</code>와 <code class=\"language-text\">message</code>를 받을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span>emailverification<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>devridge<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseException</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EmailVerificationInvalidException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseException</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">EmailVerificationInvalidException</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> code<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">EmailVerification</span> emailVerification <span class=\"token operator\">=</span> emailVerificationRepository\n     <span class=\"token punctuation\">.</span><span class=\"token function\">findTopByReceiptEmailOrderByCreatedAtDesc</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EmailVerificationInvalidException</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"해당 데이터를 찾을 수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 처리함으로써 예외처리 코드 및 응답의 통일성, 확장성, <code class=\"language-text\">GlobalExceptionHandler</code>의 코드 크기를 줄일 수 있다.</p>\n<p>향후 새로운 커스텀 오류를 처리하고 싶은 경우 <code class=\"language-text\">BaseException</code>을 상속받아 생성하고, 위 예시와 같이 사용하면 된다.</p>\n<h2 id=\"참고-자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 자료</h2>\n<p><a href=\"https://starting-coding.tistory.com/m/660\">상속을 활용한 Global Exception Handler 리팩토링</a></p>","frontmatter":{"date":"February 10, 2024","title":"GlobalExceptionHandler 리팩토링","categories":"Backend","author":"유희진","emoji":"☁️"},"fields":{"slug":"/b-exception-refactor/"}},"prev":{"id":"5eee406a-d5c6-5c55-bef0-c68223ae6dbf","html":"<h2 id=\"vpcvirtual-private-cloud\" style=\"position:relative;\"><a href=\"#vpcvirtual-private-cloud\" aria-label=\"vpcvirtual private cloud permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC(Virtual Private Cloud)</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/c888fb7f-d6f4-463e-a38b-9e5a43ec732e\" alt=\"image\">\n<a href=\"https://velog.io/@server30sopt/VPC-%EC%84%9C%EB%B8%8C%EB%84%B7-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-RDS%EC%97%90-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\">https://velog.io/@server30sopt/VPC-서브넷-설정으로-RDS에-안전하게-접근하기</a></p>\n<ul>\n<li>\n<p>물리적으로는 같은 클라우드 상에 있으나, <strong>보안상의 목적을 위해 논리적으로 다른 클라우드인 것처럼 동작하도록 만든 가상 클라우드 환경</strong></p>\n</li>\n<li>\n<p>VPC 별로 다른 네트워크를 설정할 수 있으며, 독립된 네트워크처럼 작동한다.</p>\n</li>\n<li>\n<p>만약 VPC를 설정하지 않은 경우 아래와 같은 구조를 띈다.\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/2ed11c0a-7625-4327-9d10-6a969b84a3f3\" alt=\"image\"></p>\n</li>\n<li>\n<p>하나의 VPC는 하나의 Region 내에서만 생성이 가능하지만, 두 개 이상의 리전에 걸치는 것은 불가능하다.</p>\n</li>\n<li>\n<p>하지만 하나의 VPC는 여러개의 Amazon Availability Zone에 걸쳐서 생성될 수 있다.</p>\n</li>\n</ul>\n<h3 id=\"vpc-구조\" style=\"position:relative;\"><a href=\"#vpc-%EA%B5%AC%EC%A1%B0\" aria-label=\"vpc 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC 구조</h3>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/eec45e4a-4b03-4d09-9f76-06678aed4e65\" alt=\"image\"></p>\n<h2 id=\"서브넷subnet\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C%EB%84%B7subnet\" aria-label=\"서브넷subnet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브넷(Subnet)</h2>\n<ul>\n<li>보안, 통신 성능 향상 등을 목적으로 VPC를 쪼갠 단위</li>\n</ul>\n<h3 id=\"public-subnet\" style=\"position:relative;\"><a href=\"#public-subnet\" aria-label=\"public subnet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Public Subnet</h3>\n<ul>\n<li>외부에서 접근 가능한 네트워크 영역</li>\n<li>인터넷 게이트웨이, ELB, Public IP / Elastic IP를 가진 인스턴스를 내부에 가지고 있다.</li>\n</ul>\n<h3 id=\"private-subnet\" style=\"position:relative;\"><a href=\"#private-subnet\" aria-label=\"private subnet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Private Subnet</h3>\n<ul>\n<li>외부에서 접근이 불가능한 네트워크 영역</li>\n<li>NAT 게이트웨이를 사용하면 내부에서 외부로는 접근이 가능하다.</li>\n<li>일반적으로 중요한 리소스들을 엄격하게 관리하기 위해 사용된다.</li>\n</ul>\n<h2 id=\"cidr\" style=\"position:relative;\"><a href=\"#cidr\" aria-label=\"cidr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CIDR</h2>\n<ul>\n<li>CIDR란 Classless Inter-Domain Routing으로, <strong>클래스 없는 도메인 간 라우팅 기법이라는 뜻이다.</strong>\n<ul>\n<li>즉, 도메인 간의 라우팅에 사용되는 인터넷 주소를 원래 IP 주소 클래스 체계를 쓰는 것보다 능동적으로 할당하여 지정하는 방식</li>\n</ul>\n</li>\n<li>기존에는 Class로 A, B, C, D, E로 나누어 네트워크를 사용했는데, 클래스로 나누게 되는 경우 IP 유연성이 떨어지고 IP의 개수가 많기 때문에 좀 더 유연하게 사용하고자 CIDR라는 개념이 등장했다.</li>\n<li>주소의 영역을 여러 네트워크 영역으로 나누기 위해 IP를 묶는 방식으로, IP 주소 범위를 정의하는 방식</li>\n</ul>\n<h3 id=\"cidr-블록\" style=\"position:relative;\"><a href=\"#cidr-%EB%B8%94%EB%A1%9D\" aria-label=\"cidr 블록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CIDR 블록</h3>\n<ul>\n<li>CIDR블록 = 서브넷</li>\n<li>예를 들어, <code class=\"language-text\">192.168.0.0/16</code> 대역망이 있을 때, 아래 사진은 이 대역망을 세 개의 네트워크 단위인 서브넷으로 쪼갠 것이다.\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/e2a7ba46-3fa0-4c37-847d-ddb79dbf0da1\" alt=\"image\"></li>\n</ul>\n<h2 id=\"natnetwork-address-translation-gateway\" style=\"position:relative;\"><a href=\"#natnetwork-address-translation-gateway\" aria-label=\"natnetwork address translation gateway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT(Network Address Translation) Gateway</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/d5e029b1-1bb0-4c59-bf66-ba92d2014793\" alt=\"image\"></p>\n<p><a href=\"https://kimjingo.tistory.com/180\">https://kimjingo.tistory.com/180</a></p>\n<ul>\n<li>Private 서브넷의 인스턴스가 VPC 외부의 서비스에 연결할 수 있지만, 외부 서비스에서는 연결할 수 없도록 하는 게이트웨이 서비스</li>\n<li>즉, 외부 서비스에서 private 서브넷 인스턴스로 접근할 수 없게 하되, private 서브넷의 인스턴스에서는 외부 서비스로 접근할 수 있게 도와주는 서비스</li>\n<li>NAT 게이트웨이를 사용하면 <strong>private 서브넷의 스트리밍 인스턴스가 인터넷 또는 다른 AWS 서비스에 연결할 수 있지만 인터넷에서 해당 인스턴스와의 연결을 시작하지 못하도록</strong> 할 수 있다.</li>\n</ul>\n<h2 id=\"인터넷-게이트웨이\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%EB%84%B7-%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4\" aria-label=\"인터넷 게이트웨이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터넷 게이트웨이</h2>\n<ul>\n<li><strong>VPC의 인스턴스와 인터넷 간에 통신을 할 수 있게</strong> 해주는 게이트웨이</li>\n<li>만약 인터넷으로 데이터를 보내야한다면 당연히 인터넷 게이트웨이로 트래픽을 전달해야 한다.</li>\n<li><strong>서브넷이 인터넷 게이트웨이로 향하는 라우팅이 있는 경우 퍼블릭(Public) 서브넷</strong>이라 부르며, 반대로 어떤 서브넷이 <strong>인터넷 연결을 할 필요가 없다면 해당 서브넷은 프라이빗(Private) 서브넷</strong>이라고 부른다.</li>\n</ul>\n<h2 id=\"aclnetwork-access-control-list\" style=\"position:relative;\"><a href=\"#aclnetwork-access-control-list\" aria-label=\"aclnetwork access control list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ACL(Network Access Control list)</h2>\n<ul>\n<li>네트워크 엑세스 제어 목록</li>\n<li>VPC를 위한 하나 이상의 서브넷에서 들어오고 나가는 트래픽을 제어하기 위한 방화벽 역할을 하는 보안 계층</li>\n<li>VPC에 보안 그룹과 비슷한 추가적인 보안 계층을 추가하기 위해 ACL을 설정할 수 있다.</li>\n<li>보안 그룹은 인스턴스 단에서 보안을 실행한다면, ACL은 서브넷 단에서 보안을 수행한다.</li>\n</ul>\n<h3 id=\"보안-그룹과-acl-비교\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%95%88-%EA%B7%B8%EB%A3%B9%EA%B3%BC-acl-%EB%B9%84%EA%B5%90\" aria-label=\"보안 그룹과 acl 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보안 그룹과 ACL 비교</h3>\n<table>\n<thead>\n<tr>\n<th>보안그룹</th>\n<th>네트워크 ACL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>인스턴스 단에서 실행</td>\n<td>서브넷 단에서 실행</td>\n</tr>\n<tr>\n<td>허용(allow) 규칙만 지원</td>\n<td>허용(allow) 및 거부(deny) 규칙 지원</td>\n</tr>\n<tr>\n<td>스테이트풀(stateful): 어떤 규칙과도 관계없이, 반환 트래픽이 자동적으로 허용된다.</td>\n<td>스테이트레스(stateless): 반환 트래픽이 특정 규칙에 의해서 허용된다.</td>\n</tr>\n<tr>\n<td>트래픽을 허용할 것인가에 대한 결정 전 모든 규칙을 평가한다.</td>\n<td>트래픽을 허용할 것인가에 대해 결정할 때 가장 낮은 번호의 규칙부터 시작하여 순서대로 규칙들을 수행한다.</td>\n</tr>\n<tr>\n<td>인스턴스를 시작할 때 보안그룹을 명시하거나 나중에 인스턴스와 보안그룹을 연결할 때에만 인스턴스에 적용된다.</td>\n<td>연결된 서브넷 내 모든 인스턴스에 자동적으로 적용된다. (그리하여, 보안그룹이 너무 관대할 경우, 추가적인 방화벽을 제공한다.)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"elastic-ip\" style=\"position:relative;\"><a href=\"#elastic-ip\" aria-label=\"elastic ip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Elastic IP</h2>\n<ul>\n<li>탄력적 IP 주소</li>\n<li>인터넷을 통해 접속할 수 있는 고정적인 공인 IP 주소</li>\n</ul>\n<h2 id=\"라우팅-테이블routing-table\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9A%B0%ED%8C%85-%ED%85%8C%EC%9D%B4%EB%B8%94routing-table\" aria-label=\"라우팅 테이블routing table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라우팅 테이블(Routing table)</h2>\n<ul>\n<li>네트워크 상의 특정 목적지까지의 거리와 가는 방법 등을 명시하고 있는 테이블</li>\n<li>라우터는 어떤 목적지를 찾아갈 때 해당 라우팅 테이블을 보고 찾아간다.</li>\n</ul>\n<h3 id=\"aws에서의-라우팅-테이블\" style=\"position:relative;\"><a href=\"#aws%EC%97%90%EC%84%9C%EC%9D%98-%EB%9D%BC%EC%9A%B0%ED%8C%85-%ED%85%8C%EC%9D%B4%EB%B8%94\" aria-label=\"aws에서의 라우팅 테이블 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS에서의 라우팅 테이블</h3>\n<ul>\n<li>서브넷 혹은 게이트웨이를 통해서 네트워크 트래픽이 어디로 향하는지에 대해 결정할 때 사용되는 routes라는 몇가지 룰을 포함한다.</li>\n<li>VPC 내에는 Subnet이 있으며, 각 서브넷은 각기 다른 네트워크 대역을 가지고 있다.</li>\n<li>한 서브넷에서 다른 서브넷으로 가려면 라우팅이 필요하다.</li>\n<li>VPC 내부에 대해서는 자동으로 라우팅이 생성되기 때문에 별다른 설정 없이 한 서브넷에서 다른 서브넷으로 통신이 가능하다.</li>\n</ul>\n<h1 id=\"실제-배포-환경-구축해보기\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EB%B0%B0%ED%8F%AC-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"실제 배포 환경 구축해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실제 배포 환경 구축해보기</h1>\n<p><a href=\"https://jenakim47.tistory.com/14\">[AWS] 사용자지정 VPC 만들어서 Public, Private 서브넷 만들기</a></p>\n<h2 id=\"vpc-생성\" style=\"position:relative;\"><a href=\"#vpc-%EC%83%9D%EC%84%B1\" aria-label=\"vpc 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC 생성</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/0e62ac95-1757-4c47-8598-8486aa877a0d\" alt=\"image\"></p>\n<p>우선 해당 프로젝트 배포를 위한 VPC를 위와 같이 생성한다.</p>\n<h2 id=\"subnet-생성\" style=\"position:relative;\"><a href=\"#subnet-%EC%83%9D%EC%84%B1\" aria-label=\"subnet 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>subnet 생성</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/110a45ce-8f83-4867-95d5-e30c20f99192\" alt=\"image\">\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/24ffa4ef-11ea-4267-8e9d-fa580bf89fac\" alt=\"image\">\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/4253b0a8-79bc-4bfe-8006-13870e42d7d3\" alt=\"image\"></p>\n<p>public subnet과 private subnet을 각각 생성한다.</p>\n<p>public subnet은 <code class=\"language-text\">10.0.0.0/24</code>, private subnet은 <code class=\"language-text\">10.0.1.0/24</code> 로 설정한다.</p>\n<p>추후 서브넷을 추가하는 경우 <code class=\"language-text\">10.0.2.0/24</code>, <code class=\"language-text\">10.0.3.0/24</code> … 와 같이 설정한다.</p>\n<h2 id=\"라우팅-테이블-생성\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9A%B0%ED%8C%85-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1\" aria-label=\"라우팅 테이블 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라우팅 테이블 생성</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/60f01793-2ec0-416d-b946-2aca028a97ad\" alt=\"image\">\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/3b41aa93-7cab-46a2-8777-8cd5cb8d9ebf\" alt=\"image\"></p>\n<ul>\n<li>생성 시 <strong>public subnet을 위한 테이블과 private subnet을 위한 테이블을 별도로 생성해야한다.</strong></li>\n</ul>\n<h2 id=\"인터넷-게이트웨이-생성\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%EB%84%B7-%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4-%EC%83%9D%EC%84%B1\" aria-label=\"인터넷 게이트웨이 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터넷 게이트웨이 생성</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/a952b6b9-30b0-4b33-a6fe-0a01cf891dca\" alt=\"image\">\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/ce20ad79-2446-477f-9ae5-55a1180ac0b7\" alt=\"image\">\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/2cabce0e-33b7-4555-8c0a-b5d3d3a903c9\" alt=\"image\"></p>\n<ul>\n<li>생성 후 <strong>public 서브넷의 라우팅 테이블에 연결해야 인터넷 사용이 가능</strong>하다.\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/aeab2ff7-1249-44d7-b567-fc153ee43e78\" alt=\"image\"></li>\n</ul>\n<h2 id=\"nat-게이트웨이-생성\" style=\"position:relative;\"><a href=\"#nat-%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4-%EC%83%9D%EC%84%B1\" aria-label=\"nat 게이트웨이 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT 게이트웨이 생성</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/87cea89f-8772-4775-b8c4-a82cb51690e4\" alt=\"image\"></p>\n<ul>\n<li>NAT 게이트웨이는 public 서브넷에 생성해야한다.</li>\n<li>생성 후 private 서브넷의 라우팅 테이블에 NAT 게이트웨이를 넣어준다.\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/6a683e01-2143-4397-b525-71e18b922730\" alt=\"image\"></li>\n</ul>\n<h2 id=\"acl-설정하기\" style=\"position:relative;\"><a href=\"#acl-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"acl 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ACL 설정하기</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/0e70d11b-dc1c-489d-8003-2fd3b31b27e0\" alt=\"image\"></p>\n<h2 id=\"ec2-생성하기\" style=\"position:relative;\"><a href=\"#ec2-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"ec2 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EC2 생성하기</h2>\n<p><img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/cb5bd525-4ccf-4464-b62b-88ab4a9aa5e6\" alt=\"image\"></p>\n<ul>\n<li>public subnet에 EC2를 생성한다.</li>\n<li>private subnet에 생성할 경우 퍼블릭 IP는 비활성화해야한다.</li>\n</ul>\n<h1 id=\"생성된-환경에-직접-접속해보기\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EB%90%9C-%ED%99%98%EA%B2%BD%EC%97%90-%EC%A7%81%EC%A0%91-%EC%A0%91%EC%86%8D%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"생성된 환경에 직접 접속해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성된 환경에 직접 접속해보기</h1>\n<h3 id=\"ec2-접속하기\" style=\"position:relative;\"><a href=\"#ec2-%EC%A0%91%EC%86%8D%ED%95%98%EA%B8%B0\" aria-label=\"ec2 접속하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EC2 접속하기</h3>\n<ul>\n<li>\n<p>처음에 SSH로 접속이 안 됐는데, ACL에서 80만 허용했기 때문에 안되는 것 같아 22번 포트를 추가했다.</p>\n<ul>\n<li>22번 포트를 추가하면 잘 접속된다.</li>\n</ul>\n</li>\n<li>\n<p>그러나 위 상황에서 apt-get update를 하면 오류가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">curl: <span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span> Failed to connect to download.docker.com port <span class=\"token number\">443</span> after <span class=\"token number\">278781</span> ms: Connection timed out\ngpg: no valid OpenPGP data found.</code></pre></div>\n<ul>\n<li>\n<p>원인은 ACL 때문인데, 이때 ACL 설정을 모든 요청 허용으로 변경하면 해결된다. (결국 무용지물이 된 ACL.. ㅠ_ㅠ)\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/26884dca-1c20-40d4-bc58-55e70d558d3d\" alt=\"image\"></p>\n</li>\n<li>\n<p>원인은 잘 모르지만 우선은 보안그룹 내에서 인바운드 규칙을 관리하기로 했다.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>여하튼 접속하면 아주 잘 된다!\n<img src=\"https://github.com/devridge-team-project/devridge-team-project.github.io/assets/96467030/9f551ce0-799e-430f-8d49-0094d6eb4816\" alt=\"image\"></p>\n</li>\n</ul>\n<h1 id=\"참고-자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 자료</h1>\n<ul>\n<li><a href=\"https://inpa.tistory.com/entry/AWS-%F0%9F%93%9A-%ED%83%84%EB%A0%A5%EC%A0%81-IP-Elastic-IP-EIP-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\">https://inpa.tistory.com/entry/AWS-📚-탄력적-IP-Elastic-IP-EIP-란-무엇인가</a></li>\n<li><a href=\"https://martinkim1954.tistory.com/entry/AWS-ACL-%EB%B0%8F-%EB%B3%B4%EC%95%88%EA%B7%B8%EB%A3%B9-%EB%B9%84%EA%B5%90-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%81%EC%9A%A9\">https://martinkim1954.tistory.com/entry/AWS-ACL-및-보안그룹-비교-생성-및-적용</a></li>\n<li><a href=\"https://tech.cloud.nongshim.co.kr/2018/10/16/4-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0vpc-subnet-route-table-internet-gateway/\">https://tech.cloud.nongshim.co.kr/2018/10/16/4-네트워크-구성하기vpc-subnet-route-table-internet-gateway/</a></li>\n<li><a href=\"https://kimjingo.tistory.com/180\">https://kimjingo.tistory.com/180</a></li>\n<li><a href=\"https://jenakim47.tistory.com/14\">https://jenakim47.tistory.com/14</a></li>\n<li><a href=\"https://velog.io/@server30sopt/VPC-%EC%84%9C%EB%B8%8C%EB%84%B7-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-RDS%EC%97%90-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\">https://velog.io/@server30sopt/VPC-서브넷-설정으로-RDS에-안전하게-접근하기</a></li>\n<li><a href=\"https://pjh3749.tistory.com/283\">https://pjh3749.tistory.com/283</a></li>\n<li><a href=\"https://yoo11052.tistory.com/40\">https://yoo11052.tistory.com/40</a></li>\n<li><a href=\"https://martinkim1954.tistory.com/entry/AWS-%EB%9D%BC%EC%9A%B0%ED%8C%85%ED%85%8C%EC%9D%B4%EB%B8%94Route-Table-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EB%9D%BC%EC%9A%B0%ED%8C%85\">https://martinkim1954.tistory.com/entry/AWS-라우팅테이블Route-Table-생성-및-라우팅</a></li>\n<li><a href=\"https://inpa.tistory.com/entry/WEB-%F0%9F%8C%90-CIDR-%EC%9D%B4-%EB%AC%B4%EC%96%BC-%EB%A7%90%ED%95%98%EB%8A%94%EA%B1%B0%EC%95%BC-%E2%87%9B-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC-%EA%B3%84%EC%82%B0%EB%B2%95\">https://inpa.tistory.com/entry/WEB-🌐-CIDR-이-무얼-말하는거야-⇛-개념-정리-계산법</a></li>\n<li><a href=\"https://algopoolja.tistory.com/97\">https://algopoolja.tistory.com/97</a></li>\n<li><a href=\"https://hstory0208.tistory.com/entry/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-Class%EB%9E%80-CIDR-%EB%9E%80-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EB%B0%8F-%EA%B0%9C%EB%85%90%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%B4%EB%B3%B4%EC%9E%90-feat%EC%84%9C%EB%B8%8C%EB%84%B7%ED%8C%85-%EC%8A%88%ED%8D%BC%EB%84%B7%ED%8C%85\">https://hstory0208.tistory.com/entry/네트워크-Class란-CIDR-란-차이점-및-개념을-쉽게-이해해보자-feat서브넷팅-슈퍼넷팅</a></li>\n</ul>","frontmatter":{"date":"February 16, 2024","title":"Server Production 환경 구축하기(1) - VPC와 서브넷으로 EC2 추가하기","categories":"DevOps Cloud","author":"유희진","emoji":"☁️"},"fields":{"slug":"/d-prod-environment-1/"}},"site":{"siteMetadata":{"siteUrl":"https://flow-team-project.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/b-no-offset/","nextSlug":"/b-exception-refactor/","prevSlug":"/d-prod-environment-1/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}