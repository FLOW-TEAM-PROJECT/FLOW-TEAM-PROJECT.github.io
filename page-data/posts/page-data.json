{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"2dc0ae39-4310-56db-b351-d01672cdcd67","excerpt":"Branch type 브랜치 전략은 간략한 Git flow 전략을 사용합니다. main (master) : 개발 서버 배포를 위한 브랜치 #{issue number}/name : 기능 구현을 위한 브랜치 Branch Naming 브랜치명은 반드시 소문자로만 작성해주시고, 케밥 케이스로 작성합니다. name은 스프린트를 영어로 요약하여 작성해주세요.","fields":{"slug":"/b-branch-convention/"},"frontmatter":{"categories":"Backend Convention","title":"Backend Branch Convention","date":"December 26, 2023"}},"next":{"fields":{"slug":"/b-code-convention/"}},"previous":null},{"node":{"id":"6b47d47f-503f-5594-a924-9eddc7cdcde0","excerpt":"Version Guide java version: v11 Code Style Guide 코드의 는 최대 120자를 넘지 않도록 합니다. 하나의 메소드는 하나의 역할만 수행하도록 작성합니다. 메소드의 매개변수가 4개 이상일 시 별도의 객체를 만들어 전달합니다. 코드 작성 시 스타일은 카멜 케이스로 작성해주세요. 변수는 명사형으로, 메소드(함수)는 동사형으로 작성해주세요. 자주 사용하는 혹은 불변하지 않는 값은 enum이나 final로 선언해주세요. 접근 제어, 인터페이스/구현부 분리 등의 캡슐화를 최대한 지키며 코드를 작성합니다. Backend의 경우 폴더명(패키지)은 소문자로, 파일명은 카멜 케이스로 작성해주세요. Backend의 경우 문자열 작성 시  사용해주세요. CRUD method의 경우 다음과 같은 네이밍을 사용합니다. 동작 Repository Service Create insertXXX createXXX Read findXX(ByXXAnd/OrYY) getXX(ByXXA…","fields":{"slug":"/b-code-convention/"},"frontmatter":{"categories":"Backend Convention","title":"Backend Code Convention","date":"December 26, 2023"}},"next":{"fields":{"slug":"/b-commit-convention/"}},"previous":{"fields":{"slug":"/b-branch-convention/"}}},{"node":{"id":"326dd6ad-2ee3-5f1c-8f06-5bce8b3156b0","excerpt":"Commit Message Form 은 첫 줄 작성 후 엔터를 누르면 작성할 수 있습니다. (선택 사항) 사용 예시  Type 메세지 타입은 반드시 소문자를 사용해주세요. Type Description feat 새로운 기능 추가 시 사용합니다. fix 오류 수정 시 사용합니다. docs README.md 등의 문서 작성 및 수정 시 사용합니다. style 들여쓰기, 케이스 등 코드 스타일 변경 시 사용합니다. (ex. 카멜 케이스 → 스네이크 케이스) refactor 불필요한 코드 삭제, 코드 리팩토링 등의 전반적인 프로젝트 리팩토링 시 사용합니다. test 테스트 코드 작성 시 사용합니다. ci/cd CI/CD 설정 파일 수정 시 사용합니다. hotfix 치명적인 오류를 급히 수정할 때 사용합니다. rename 파일 이름 변경 시 사용합니다. perf 성능 개선 시 사용합니다. chore 기타 사소한 수정 시 사용합니다. Message 메세지는 ‘~다’로 끝나지 않으며, 한 줄로…","fields":{"slug":"/b-commit-convention/"},"frontmatter":{"categories":"Backend Convention","title":"Backend Commit Convention","date":"December 26, 2023"}},"next":{"fields":{"slug":"/b-issue-pr-convention/"}},"previous":{"fields":{"slug":"/b-code-convention/"}}},{"node":{"id":"b9a0e4b3-d5d1-5961-9e25-696d8b1f2189","excerpt":"Issue Guide 각 목적에 맞는 이슈 템플릿을 사용합니다. 이슈 제목은 스프린트를 한 줄로 요약해서 작성해주세요. 라벨은  등 목적에 맞는 라벨과  등의 진행 상황 라벨을 달아주세요. 는 각 스프린트의 담당자를 지정합니다. PR 시 완료 라벨을 달아주시고, Merge되면 해당 이슈를 반드시 닫아줍니다. (PR에서 설정) 커밋 메세지 작성 시 반드시 이슈 번호를 달아 커밋 메세지를 해당 이슈에서 볼 수 있도록 합니다. PR Guide PR 템플릿을 사용하여 최대한 상세하게 작성합니다. PR 제목은 이슈 제목과 일치시켜주세요. 는 코드 리뷰어 및 테스터를 설정합니다. Approved 승인 없이는 절대 Merge하지 않습니다. 승인 전 반드시 오류가 없는지 테스트해주시고, 코드 컨벤션을 지켰는지 확인해주세요. Merge target은  브랜치로 지정해주세요.","fields":{"slug":"/b-issue-pr-convention/"},"frontmatter":{"categories":"Backend Convention","title":"Backend Issue/PR Convention","date":"December 26, 2023"}},"next":null,"previous":{"fields":{"slug":"/b-commit-convention/"}}}],"categories":["All","Backend","Convention"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}